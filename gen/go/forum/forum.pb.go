// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: forum/forum.proto

package forumv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_STATUS_UNSPECIFIED Status = 0
	Status_STATUS_ACTIVE      Status = 1
	Status_STATUS_DELETED     Status = 2
	Status_STATUS_HIDDEN      Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_ACTIVE",
		2: "STATUS_DELETED",
		3: "STATUS_HIDDEN",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_ACTIVE":      1,
		"STATUS_DELETED":     2,
		"STATUS_HIDDEN":      3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_forum_forum_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_forum_forum_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{0}
}

type SortOrder int32

const (
	SortOrder_SORT_ORDER_UNSPECIFIED SortOrder = 0
	SortOrder_SORT_ORDER_ASC         SortOrder = 1
	SortOrder_SORT_ORDER_DESC        SortOrder = 2
)

// Enum value maps for SortOrder.
var (
	SortOrder_name = map[int32]string{
		0: "SORT_ORDER_UNSPECIFIED",
		1: "SORT_ORDER_ASC",
		2: "SORT_ORDER_DESC",
	}
	SortOrder_value = map[string]int32{
		"SORT_ORDER_UNSPECIFIED": 0,
		"SORT_ORDER_ASC":         1,
		"SORT_ORDER_DESC":        2,
	}
)

func (x SortOrder) Enum() *SortOrder {
	p := new(SortOrder)
	*p = x
	return p
}

func (x SortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_forum_forum_proto_enumTypes[1].Descriptor()
}

func (SortOrder) Type() protoreflect.EnumType {
	return &file_forum_forum_proto_enumTypes[1]
}

func (x SortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortOrder.Descriptor instead.
func (SortOrder) EnumDescriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{1}
}

type SortField int32

const (
	SortField_SORT_FIELD_UNSPECIFIED SortField = 0
	SortField_SORT_FIELD_CREATED_AT  SortField = 1
	SortField_SORT_FIELD_UPDATED_AT  SortField = 2
	SortField_SORT_FIELD_TITLE       SortField = 3
	SortField_SORT_FIELD_POPULARITY  SortField = 4
)

// Enum value maps for SortField.
var (
	SortField_name = map[int32]string{
		0: "SORT_FIELD_UNSPECIFIED",
		1: "SORT_FIELD_CREATED_AT",
		2: "SORT_FIELD_UPDATED_AT",
		3: "SORT_FIELD_TITLE",
		4: "SORT_FIELD_POPULARITY",
	}
	SortField_value = map[string]int32{
		"SORT_FIELD_UNSPECIFIED": 0,
		"SORT_FIELD_CREATED_AT":  1,
		"SORT_FIELD_UPDATED_AT":  2,
		"SORT_FIELD_TITLE":       3,
		"SORT_FIELD_POPULARITY":  4,
	}
)

func (x SortField) Enum() *SortField {
	p := new(SortField)
	*p = x
	return p
}

func (x SortField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortField) Descriptor() protoreflect.EnumDescriptor {
	return file_forum_forum_proto_enumTypes[2].Descriptor()
}

func (SortField) Type() protoreflect.EnumType {
	return &file_forum_forum_proto_enumTypes[2]
}

func (x SortField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortField.Descriptor instead.
func (SortField) EnumDescriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{2}
}

// ========== Common Messages ==========
type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_forum_forum_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{0}
}

type Pagination struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_forum_forum_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type Sorting struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SortField     SortField              `protobuf:"varint,1,opt,name=sort_field,json=sortField,proto3,enum=forum.SortField" json:"sort_field,omitempty"`
	SortOrder     SortOrder              `protobuf:"varint,2,opt,name=sort_order,json=sortOrder,proto3,enum=forum.SortOrder" json:"sort_order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sorting) Reset() {
	*x = Sorting{}
	mi := &file_forum_forum_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sorting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sorting) ProtoMessage() {}

func (x *Sorting) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sorting.ProtoReflect.Descriptor instead.
func (*Sorting) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{2}
}

func (x *Sorting) GetSortField() SortField {
	if x != nil {
		return x.SortField
	}
	return SortField_SORT_FIELD_UNSPECIFIED
}

func (x *Sorting) GetSortOrder() SortOrder {
	if x != nil {
		return x.SortOrder
	}
	return SortOrder_SORT_ORDER_UNSPECIFIED
}

// ========== Category Messages ==========
type Category struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Slug          string                 `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Unix timestamp in milliseconds
	UpdatedAt     int64                  `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // Unix timestamp in milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Category) Reset() {
	*x = Category{}
	mi := &file_forum_forum_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{3}
}

func (x *Category) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Category) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Category) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Category) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Category) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Category) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type CreateCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCategoryRequest) Reset() {
	*x = CreateCategoryRequest{}
	mi := &file_forum_forum_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCategoryRequest) ProtoMessage() {}

func (x *CreateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCategoryRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateCategoryRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         *string                `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	Description   *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCategoryRequest) Reset() {
	*x = UpdateCategoryRequest{}
	mi := &file_forum_forum_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCategoryRequest) ProtoMessage() {}

func (x *UpdateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCategoryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCategoryRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateCategoryRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type ListCategoriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pagination    *Pagination            `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCategoriesRequest) Reset() {
	*x = ListCategoriesRequest{}
	mi := &file_forum_forum_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCategoriesRequest) ProtoMessage() {}

func (x *ListCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCategoriesRequest.ProtoReflect.Descriptor instead.
func (*ListCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{6}
}

func (x *ListCategoriesRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListCategoriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Categories    []*Category            `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	TotalCount    int64                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCategoriesResponse) Reset() {
	*x = ListCategoriesResponse{}
	mi := &file_forum_forum_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCategoriesResponse) ProtoMessage() {}

func (x *ListCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCategoriesResponse.ProtoReflect.Descriptor instead.
func (*ListCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{7}
}

func (x *ListCategoriesResponse) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *ListCategoriesResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCategoryRequest) Reset() {
	*x = GetCategoryRequest{}
	mi := &file_forum_forum_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryRequest) ProtoMessage() {}

func (x *GetCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetCategoryRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{8}
}

func (x *GetCategoryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCategoryRequest) Reset() {
	*x = DeleteCategoryRequest{}
	mi := &file_forum_forum_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryRequest) ProtoMessage() {}

func (x *DeleteCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteCategoryRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteCategoryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      *Category              `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CategoryResponse) Reset() {
	*x = CategoryResponse{}
	mi := &file_forum_forum_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryResponse) ProtoMessage() {}

func (x *CategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryResponse.ProtoReflect.Descriptor instead.
func (*CategoryResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{10}
}

func (x *CategoryResponse) GetCategory() *Category {
	if x != nil {
		return x.Category
	}
	return nil
}

// ========== Topic Messages ==========
type Topic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AuthorId      int64                  `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	CategoryId    int64                  `protobuf:"varint,4,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Unix timestamp in milliseconds
	Status        Status                 `protobuf:"varint,6,opt,name=status,proto3,enum=forum.Status" json:"status,omitempty"`
	PostsCount    int64                  `protobuf:"varint,7,opt,name=posts_count,json=postsCount,proto3" json:"posts_count,omitempty"`
	ViewsCount    int64                  `protobuf:"varint,8,opt,name=views_count,json=viewsCount,proto3" json:"views_count,omitempty"`
	LastActivity  int64                  `protobuf:"varint,9,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"` // Unix timestamp in milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Topic) Reset() {
	*x = Topic{}
	mi := &file_forum_forum_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Topic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topic) ProtoMessage() {}

func (x *Topic) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topic.ProtoReflect.Descriptor instead.
func (*Topic) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{11}
}

func (x *Topic) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Topic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Topic) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Topic) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *Topic) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Topic) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *Topic) GetPostsCount() int64 {
	if x != nil {
		return x.PostsCount
	}
	return 0
}

func (x *Topic) GetViewsCount() int64 {
	if x != nil {
		return x.ViewsCount
	}
	return 0
}

func (x *Topic) GetLastActivity() int64 {
	if x != nil {
		return x.LastActivity
	}
	return 0
}

type CreateTopicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	AuthorId      int64                  `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	CategoryId    int64                  `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"` // First post content
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTopicRequest) Reset() {
	*x = CreateTopicRequest{}
	mi := &file_forum_forum_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicRequest) ProtoMessage() {}

func (x *CreateTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicRequest.ProtoReflect.Descriptor instead.
func (*CreateTopicRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{12}
}

func (x *CreateTopicRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTopicRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *CreateTopicRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *CreateTopicRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpdateTopicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         *string                `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	CategoryId    *int64                 `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3,oneof" json:"category_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTopicRequest) Reset() {
	*x = UpdateTopicRequest{}
	mi := &file_forum_forum_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopicRequest) ProtoMessage() {}

func (x *UpdateTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTopicRequest.ProtoReflect.Descriptor instead.
func (*UpdateTopicRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateTopicRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTopicRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateTopicRequest) GetCategoryId() int64 {
	if x != nil && x.CategoryId != nil {
		return *x.CategoryId
	}
	return 0
}

type ListTopicsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryId    *int64                 `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3,oneof" json:"category_id,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Sorting       *Sorting               `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTopicsRequest) Reset() {
	*x = ListTopicsRequest{}
	mi := &file_forum_forum_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTopicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsRequest) ProtoMessage() {}

func (x *ListTopicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsRequest.ProtoReflect.Descriptor instead.
func (*ListTopicsRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{14}
}

func (x *ListTopicsRequest) GetCategoryId() int64 {
	if x != nil && x.CategoryId != nil {
		return *x.CategoryId
	}
	return 0
}

func (x *ListTopicsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListTopicsRequest) GetSorting() *Sorting {
	if x != nil {
		return x.Sorting
	}
	return nil
}

type ListTopicsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topics        []*Topic               `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	TotalCount    int64                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTopicsResponse) Reset() {
	*x = ListTopicsResponse{}
	mi := &file_forum_forum_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTopicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsResponse) ProtoMessage() {}

func (x *ListTopicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsResponse.ProtoReflect.Descriptor instead.
func (*ListTopicsResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{15}
}

func (x *ListTopicsResponse) GetTopics() []*Topic {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *ListTopicsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetTopicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTopicRequest) Reset() {
	*x = GetTopicRequest{}
	mi := &file_forum_forum_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicRequest) ProtoMessage() {}

func (x *GetTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicRequest.ProtoReflect.Descriptor instead.
func (*GetTopicRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{16}
}

func (x *GetTopicRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTopicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTopicRequest) Reset() {
	*x = DeleteTopicRequest{}
	mi := &file_forum_forum_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopicRequest) ProtoMessage() {}

func (x *DeleteTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopicRequest.ProtoReflect.Descriptor instead.
func (*DeleteTopicRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteTopicRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TopicResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         *Topic                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	FirstPost     *Post                  `protobuf:"bytes,2,opt,name=first_post,json=firstPost,proto3" json:"first_post,omitempty"` // First post in topic
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicResponse) Reset() {
	*x = TopicResponse{}
	mi := &file_forum_forum_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicResponse) ProtoMessage() {}

func (x *TopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicResponse.ProtoReflect.Descriptor instead.
func (*TopicResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{18}
}

func (x *TopicResponse) GetTopic() *Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *TopicResponse) GetFirstPost() *Post {
	if x != nil {
		return x.FirstPost
	}
	return nil
}

// ========== Post Messages ==========
type Post struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TopicId       int64                  `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	AuthorId      int64                  `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Images        []string               `protobuf:"bytes,6,rep,name=images,proto3" json:"images,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Unix timestamp in milliseconds
	UpdatedAt     int64                  `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // Unix timestamp in milliseconds
	Status        Status                 `protobuf:"varint,9,opt,name=status,proto3,enum=forum.Status" json:"status,omitempty"`
	ViewsCount    int64                  `protobuf:"varint,10,opt,name=views_count,json=viewsCount,proto3" json:"views_count,omitempty"`
	CommentsCount int64                  `protobuf:"varint,11,opt,name=comments_count,json=commentsCount,proto3" json:"comments_count,omitempty"`
	LikesCount    int64                  `protobuf:"varint,12,opt,name=likes_count,json=likesCount,proto3" json:"likes_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Post) Reset() {
	*x = Post{}
	mi := &file_forum_forum_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{19}
}

func (x *Post) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Post) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *Post) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Post) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Post) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Post) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Post) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Post) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Post) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *Post) GetViewsCount() int64 {
	if x != nil {
		return x.ViewsCount
	}
	return 0
}

func (x *Post) GetCommentsCount() int64 {
	if x != nil {
		return x.CommentsCount
	}
	return 0
}

func (x *Post) GetLikesCount() int64 {
	if x != nil {
		return x.LikesCount
	}
	return 0
}

type CreatePostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicId       int64                  `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	AuthorId      int64                  `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Images        []string               `protobuf:"bytes,5,rep,name=images,proto3" json:"images,omitempty"`
	TagIds        []int64                `protobuf:"varint,6,rep,packed,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"` // Initial tags
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePostRequest) Reset() {
	*x = CreatePostRequest{}
	mi := &file_forum_forum_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostRequest) ProtoMessage() {}

func (x *CreatePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostRequest.ProtoReflect.Descriptor instead.
func (*CreatePostRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{20}
}

func (x *CreatePostRequest) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *CreatePostRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *CreatePostRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreatePostRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreatePostRequest) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *CreatePostRequest) GetTagIds() []int64 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

type UpdatePostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         *string                `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	Content       *string                `protobuf:"bytes,3,opt,name=content,proto3,oneof" json:"content,omitempty"`
	Images        []string               `protobuf:"bytes,4,rep,name=images,proto3" json:"images,omitempty"`
	TagIds        []int64                `protobuf:"varint,5,rep,packed,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"` // Full tag set
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePostRequest) Reset() {
	*x = UpdatePostRequest{}
	mi := &file_forum_forum_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostRequest) ProtoMessage() {}

func (x *UpdatePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostRequest.ProtoReflect.Descriptor instead.
func (*UpdatePostRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{21}
}

func (x *UpdatePostRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePostRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdatePostRequest) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *UpdatePostRequest) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *UpdatePostRequest) GetTagIds() []int64 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

type ListPostsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicId       *int64                 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3,oneof" json:"topic_id,omitempty"`
	TagId         *int64                 `protobuf:"varint,2,opt,name=tag_id,json=tagId,proto3,oneof" json:"tag_id,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Sorting       *Sorting               `protobuf:"bytes,4,opt,name=sorting,proto3" json:"sorting,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPostsRequest) Reset() {
	*x = ListPostsRequest{}
	mi := &file_forum_forum_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPostsRequest) ProtoMessage() {}

func (x *ListPostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPostsRequest.ProtoReflect.Descriptor instead.
func (*ListPostsRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{22}
}

func (x *ListPostsRequest) GetTopicId() int64 {
	if x != nil && x.TopicId != nil {
		return *x.TopicId
	}
	return 0
}

func (x *ListPostsRequest) GetTagId() int64 {
	if x != nil && x.TagId != nil {
		return *x.TagId
	}
	return 0
}

func (x *ListPostsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListPostsRequest) GetSorting() *Sorting {
	if x != nil {
		return x.Sorting
	}
	return nil
}

type ListPostsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Posts         []*Post                `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	TotalCount    int64                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPostsResponse) Reset() {
	*x = ListPostsResponse{}
	mi := &file_forum_forum_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPostsResponse) ProtoMessage() {}

func (x *ListPostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPostsResponse.ProtoReflect.Descriptor instead.
func (*ListPostsResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{23}
}

func (x *ListPostsResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *ListPostsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetPostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPostRequest) Reset() {
	*x = GetPostRequest{}
	mi := &file_forum_forum_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostRequest) ProtoMessage() {}

func (x *GetPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostRequest.ProtoReflect.Descriptor instead.
func (*GetPostRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{24}
}

func (x *GetPostRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeletePostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePostRequest) Reset() {
	*x = DeletePostRequest{}
	mi := &file_forum_forum_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostRequest) ProtoMessage() {}

func (x *DeletePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostRequest.ProtoReflect.Descriptor instead.
func (*DeletePostRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{25}
}

func (x *DeletePostRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Post          *Post                  `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostResponse) Reset() {
	*x = PostResponse{}
	mi := &file_forum_forum_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostResponse) ProtoMessage() {}

func (x *PostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostResponse.ProtoReflect.Descriptor instead.
func (*PostResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{26}
}

func (x *PostResponse) GetPost() *Post {
	if x != nil {
		return x.Post
	}
	return nil
}

// ========== Comment Messages ==========
type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PostId        int64                  `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	AuthorId      int64                  `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Unix timestamp in milliseconds
	UpdatedAt     int64                  `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // Unix timestamp in milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_forum_forum_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{27}
}

func (x *Comment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *Comment) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Comment) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int64                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	AuthorId      int64                  `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_forum_forum_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{28}
}

func (x *CreateCommentRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *CreateCommentRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *CreateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpdateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCommentRequest) Reset() {
	*x = UpdateCommentRequest{}
	mi := &file_forum_forum_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentRequest) ProtoMessage() {}

func (x *UpdateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommentRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateCommentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ListCommentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int64                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommentsRequest) Reset() {
	*x = ListCommentsRequest{}
	mi := &file_forum_forum_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentsRequest) ProtoMessage() {}

func (x *ListCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentsRequest.ProtoReflect.Descriptor instead.
func (*ListCommentsRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{30}
}

func (x *ListCommentsRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *ListCommentsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListCommentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	TotalCount    int64                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommentsResponse) Reset() {
	*x = ListCommentsResponse{}
	mi := &file_forum_forum_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentsResponse) ProtoMessage() {}

func (x *ListCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentsResponse.ProtoReflect.Descriptor instead.
func (*ListCommentsResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{31}
}

func (x *ListCommentsResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *ListCommentsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentRequest) Reset() {
	*x = GetCommentRequest{}
	mi := &file_forum_forum_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentRequest) ProtoMessage() {}

func (x *GetCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentRequest.ProtoReflect.Descriptor instead.
func (*GetCommentRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{32}
}

func (x *GetCommentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_forum_forum_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteCommentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentResponse) Reset() {
	*x = CommentResponse{}
	mi := &file_forum_forum_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentResponse) ProtoMessage() {}

func (x *CommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentResponse.ProtoReflect.Descriptor instead.
func (*CommentResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{34}
}

func (x *CommentResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

// ========== Tag Messages ==========
type Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Slug          string                 `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tag) Reset() {
	*x = Tag{}
	mi := &file_forum_forum_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{35}
}

func (x *Tag) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type CreateTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTagRequest) Reset() {
	*x = CreateTagRequest{}
	mi := &file_forum_forum_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagRequest) ProtoMessage() {}

func (x *CreateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagRequest.ProtoReflect.Descriptor instead.
func (*CreateTagRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{36}
}

func (x *CreateTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetTagRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Identifier:
	//
	//	*GetTagRequest_Id
	//	*GetTagRequest_Slug
	Identifier    isGetTagRequest_Identifier `protobuf_oneof:"identifier"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTagRequest) Reset() {
	*x = GetTagRequest{}
	mi := &file_forum_forum_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagRequest) ProtoMessage() {}

func (x *GetTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagRequest.ProtoReflect.Descriptor instead.
func (*GetTagRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{37}
}

func (x *GetTagRequest) GetIdentifier() isGetTagRequest_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *GetTagRequest) GetId() int64 {
	if x != nil {
		if x, ok := x.Identifier.(*GetTagRequest_Id); ok {
			return x.Id
		}
	}
	return 0
}

func (x *GetTagRequest) GetSlug() string {
	if x != nil {
		if x, ok := x.Identifier.(*GetTagRequest_Slug); ok {
			return x.Slug
		}
	}
	return ""
}

type isGetTagRequest_Identifier interface {
	isGetTagRequest_Identifier()
}

type GetTagRequest_Id struct {
	Id int64 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type GetTagRequest_Slug struct {
	Slug string `protobuf:"bytes,2,opt,name=slug,proto3,oneof"`
}

func (*GetTagRequest_Id) isGetTagRequest_Identifier() {}

func (*GetTagRequest_Slug) isGetTagRequest_Identifier() {}

type ListTagsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pagination    *Pagination            `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTagsRequest) Reset() {
	*x = ListTagsRequest{}
	mi := &file_forum_forum_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsRequest) ProtoMessage() {}

func (x *ListTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsRequest.ProtoReflect.Descriptor instead.
func (*ListTagsRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{38}
}

func (x *ListTagsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListTagsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []*Tag                 `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	TotalCount    int64                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTagsResponse) Reset() {
	*x = ListTagsResponse{}
	mi := &file_forum_forum_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsResponse) ProtoMessage() {}

func (x *ListTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsResponse.ProtoReflect.Descriptor instead.
func (*ListTagsResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{39}
}

func (x *ListTagsResponse) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ListTagsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ListTagsByPostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int64                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTagsByPostRequest) Reset() {
	*x = ListTagsByPostRequest{}
	mi := &file_forum_forum_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTagsByPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsByPostRequest) ProtoMessage() {}

func (x *ListTagsByPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsByPostRequest.ProtoReflect.Descriptor instead.
func (*ListTagsByPostRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{40}
}

func (x *ListTagsByPostRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type AddTagToPostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int64                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	TagId         int64                  `protobuf:"varint,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTagToPostRequest) Reset() {
	*x = AddTagToPostRequest{}
	mi := &file_forum_forum_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTagToPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagToPostRequest) ProtoMessage() {}

func (x *AddTagToPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagToPostRequest.ProtoReflect.Descriptor instead.
func (*AddTagToPostRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{41}
}

func (x *AddTagToPostRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *AddTagToPostRequest) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

type RemoveTagFromPostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int64                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	TagId         int64                  `protobuf:"varint,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveTagFromPostRequest) Reset() {
	*x = RemoveTagFromPostRequest{}
	mi := &file_forum_forum_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveTagFromPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTagFromPostRequest) ProtoMessage() {}

func (x *RemoveTagFromPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTagFromPostRequest.ProtoReflect.Descriptor instead.
func (*RemoveTagFromPostRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{42}
}

func (x *RemoveTagFromPostRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *RemoveTagFromPostRequest) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

type TagResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tag           *Tag                   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagResponse) Reset() {
	*x = TagResponse{}
	mi := &file_forum_forum_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagResponse) ProtoMessage() {}

func (x *TagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagResponse.ProtoReflect.Descriptor instead.
func (*TagResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{43}
}

func (x *TagResponse) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

// ========== Search ==========
type SearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_forum_forum_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{44}
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Posts         []*Post                `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	Topics        []*Topic               `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	TotalPosts    int64                  `protobuf:"varint,3,opt,name=total_posts,json=totalPosts,proto3" json:"total_posts,omitempty"`
	TotalTopics   int64                  `protobuf:"varint,4,opt,name=total_topics,json=totalTopics,proto3" json:"total_topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_forum_forum_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{45}
}

func (x *SearchResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *SearchResponse) GetTopics() []*Topic {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *SearchResponse) GetTotalPosts() int64 {
	if x != nil {
		return x.TotalPosts
	}
	return 0
}

func (x *SearchResponse) GetTotalTopics() int64 {
	if x != nil {
		return x.TotalTopics
	}
	return 0
}

type ListPostsByTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TagId         int64                  `protobuf:"varint,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPostsByTagRequest) Reset() {
	*x = ListPostsByTagRequest{}
	mi := &file_forum_forum_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPostsByTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPostsByTagRequest) ProtoMessage() {}

func (x *ListPostsByTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPostsByTagRequest.ProtoReflect.Descriptor instead.
func (*ListPostsByTagRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{46}
}

func (x *ListPostsByTagRequest) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *ListPostsByTagRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_forum_forum_proto protoreflect.FileDescriptor

const file_forum_forum_proto_rawDesc = "" +
	"\n" +
	"\x11forum/forum.proto\x12\x05forum\"\a\n" +
	"\x05Empty\":\n" +
	"\n" +
	"Pagination\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"k\n" +
	"\aSorting\x12/\n" +
	"\n" +
	"sort_field\x18\x01 \x01(\x0e2\x10.forum.SortFieldR\tsortField\x12/\n" +
	"\n" +
	"sort_order\x18\x02 \x01(\x0e2\x10.forum.SortOrderR\tsortOrder\"\xa4\x01\n" +
	"\bCategory\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x12\n" +
	"\x04slug\x18\x03 \x01(\tR\x04slug\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\x03R\tupdatedAt\"O\n" +
	"\x15CreateCategoryRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\"\x83\x01\n" +
	"\x15UpdateCategoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tH\x00R\x05title\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x01R\vdescription\x88\x01\x01B\b\n" +
	"\x06_titleB\x0e\n" +
	"\f_description\"J\n" +
	"\x15ListCategoriesRequest\x121\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2\x11.forum.PaginationR\n" +
	"pagination\"j\n" +
	"\x16ListCategoriesResponse\x12/\n" +
	"\n" +
	"categories\x18\x01 \x03(\v2\x0f.forum.CategoryR\n" +
	"categories\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x03R\n" +
	"totalCount\"$\n" +
	"\x12GetCategoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"'\n" +
	"\x15DeleteCategoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"?\n" +
	"\x10CategoryResponse\x12+\n" +
	"\bcategory\x18\x01 \x01(\v2\x0f.forum.CategoryR\bcategory\"\x98\x02\n" +
	"\x05Topic\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1b\n" +
	"\tauthor_id\x18\x03 \x01(\x03R\bauthorId\x12\x1f\n" +
	"\vcategory_id\x18\x04 \x01(\x03R\n" +
	"categoryId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\x12%\n" +
	"\x06status\x18\x06 \x01(\x0e2\r.forum.StatusR\x06status\x12\x1f\n" +
	"\vposts_count\x18\a \x01(\x03R\n" +
	"postsCount\x12\x1f\n" +
	"\vviews_count\x18\b \x01(\x03R\n" +
	"viewsCount\x12#\n" +
	"\rlast_activity\x18\t \x01(\x03R\flastActivity\"\x82\x01\n" +
	"\x12CreateTopicRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x1b\n" +
	"\tauthor_id\x18\x02 \x01(\x03R\bauthorId\x12\x1f\n" +
	"\vcategory_id\x18\x03 \x01(\x03R\n" +
	"categoryId\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\"\x7f\n" +
	"\x12UpdateTopicRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tH\x00R\x05title\x88\x01\x01\x12$\n" +
	"\vcategory_id\x18\x03 \x01(\x03H\x01R\n" +
	"categoryId\x88\x01\x01B\b\n" +
	"\x06_titleB\x0e\n" +
	"\f_category_id\"\xa6\x01\n" +
	"\x11ListTopicsRequest\x12$\n" +
	"\vcategory_id\x18\x01 \x01(\x03H\x00R\n" +
	"categoryId\x88\x01\x01\x121\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x11.forum.PaginationR\n" +
	"pagination\x12(\n" +
	"\asorting\x18\x03 \x01(\v2\x0e.forum.SortingR\asortingB\x0e\n" +
	"\f_category_id\"[\n" +
	"\x12ListTopicsResponse\x12$\n" +
	"\x06topics\x18\x01 \x03(\v2\f.forum.TopicR\x06topics\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x03R\n" +
	"totalCount\"!\n" +
	"\x0fGetTopicRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"$\n" +
	"\x12DeleteTopicRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"_\n" +
	"\rTopicResponse\x12\"\n" +
	"\x05topic\x18\x01 \x01(\v2\f.forum.TopicR\x05topic\x12*\n" +
	"\n" +
	"first_post\x18\x02 \x01(\v2\v.forum.PostR\tfirstPost\"\xe4\x02\n" +
	"\x04Post\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x19\n" +
	"\btopic_id\x18\x02 \x01(\x03R\atopicId\x12\x1b\n" +
	"\tauthor_id\x18\x03 \x01(\x03R\bauthorId\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12\x16\n" +
	"\x06images\x18\x06 \x03(\tR\x06images\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\b \x01(\x03R\tupdatedAt\x12%\n" +
	"\x06status\x18\t \x01(\x0e2\r.forum.StatusR\x06status\x12\x1f\n" +
	"\vviews_count\x18\n" +
	" \x01(\x03R\n" +
	"viewsCount\x12%\n" +
	"\x0ecomments_count\x18\v \x01(\x03R\rcommentsCount\x12\x1f\n" +
	"\vlikes_count\x18\f \x01(\x03R\n" +
	"likesCount\"\xac\x01\n" +
	"\x11CreatePostRequest\x12\x19\n" +
	"\btopic_id\x18\x01 \x01(\x03R\atopicId\x12\x1b\n" +
	"\tauthor_id\x18\x02 \x01(\x03R\bauthorId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x16\n" +
	"\x06images\x18\x05 \x03(\tR\x06images\x12\x17\n" +
	"\atag_ids\x18\x06 \x03(\x03R\x06tagIds\"\xa4\x01\n" +
	"\x11UpdatePostRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tH\x00R\x05title\x88\x01\x01\x12\x1d\n" +
	"\acontent\x18\x03 \x01(\tH\x01R\acontent\x88\x01\x01\x12\x16\n" +
	"\x06images\x18\x04 \x03(\tR\x06images\x12\x17\n" +
	"\atag_ids\x18\x05 \x03(\x03R\x06tagIdsB\b\n" +
	"\x06_titleB\n" +
	"\n" +
	"\b_content\"\xc3\x01\n" +
	"\x10ListPostsRequest\x12\x1e\n" +
	"\btopic_id\x18\x01 \x01(\x03H\x00R\atopicId\x88\x01\x01\x12\x1a\n" +
	"\x06tag_id\x18\x02 \x01(\x03H\x01R\x05tagId\x88\x01\x01\x121\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\x11.forum.PaginationR\n" +
	"pagination\x12(\n" +
	"\asorting\x18\x04 \x01(\v2\x0e.forum.SortingR\asortingB\v\n" +
	"\t_topic_idB\t\n" +
	"\a_tag_id\"W\n" +
	"\x11ListPostsResponse\x12!\n" +
	"\x05posts\x18\x01 \x03(\v2\v.forum.PostR\x05posts\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x03R\n" +
	"totalCount\" \n" +
	"\x0eGetPostRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"#\n" +
	"\x11DeletePostRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"/\n" +
	"\fPostResponse\x12\x1f\n" +
	"\x04post\x18\x01 \x01(\v2\v.forum.PostR\x04post\"\xa7\x01\n" +
	"\aComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\apost_id\x18\x02 \x01(\x03R\x06postId\x12\x1b\n" +
	"\tauthor_id\x18\x03 \x01(\x03R\bauthorId\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\x03R\tupdatedAt\"f\n" +
	"\x14CreateCommentRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\x03R\x06postId\x12\x1b\n" +
	"\tauthor_id\x18\x02 \x01(\x03R\bauthorId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"@\n" +
	"\x14UpdateCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\"a\n" +
	"\x13ListCommentsRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\x03R\x06postId\x121\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x11.forum.PaginationR\n" +
	"pagination\"c\n" +
	"\x14ListCommentsResponse\x12*\n" +
	"\bcomments\x18\x01 \x03(\v2\x0e.forum.CommentR\bcomments\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x03R\n" +
	"totalCount\"#\n" +
	"\x11GetCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"&\n" +
	"\x14DeleteCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\";\n" +
	"\x0fCommentResponse\x12(\n" +
	"\acomment\x18\x01 \x01(\v2\x0e.forum.CommentR\acomment\"=\n" +
	"\x03Tag\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04slug\x18\x03 \x01(\tR\x04slug\"&\n" +
	"\x10CreateTagRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"E\n" +
	"\rGetTagRequest\x12\x10\n" +
	"\x02id\x18\x01 \x01(\x03H\x00R\x02id\x12\x14\n" +
	"\x04slug\x18\x02 \x01(\tH\x00R\x04slugB\f\n" +
	"\n" +
	"identifier\"D\n" +
	"\x0fListTagsRequest\x121\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2\x11.forum.PaginationR\n" +
	"pagination\"S\n" +
	"\x10ListTagsResponse\x12\x1e\n" +
	"\x04tags\x18\x01 \x03(\v2\n" +
	".forum.TagR\x04tags\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x03R\n" +
	"totalCount\"0\n" +
	"\x15ListTagsByPostRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\x03R\x06postId\"E\n" +
	"\x13AddTagToPostRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\x03R\x06postId\x12\x15\n" +
	"\x06tag_id\x18\x02 \x01(\x03R\x05tagId\"J\n" +
	"\x18RemoveTagFromPostRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\x03R\x06postId\x12\x15\n" +
	"\x06tag_id\x18\x02 \x01(\x03R\x05tagId\"+\n" +
	"\vTagResponse\x12\x1c\n" +
	"\x03tag\x18\x01 \x01(\v2\n" +
	".forum.TagR\x03tag\"X\n" +
	"\rSearchRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x121\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x11.forum.PaginationR\n" +
	"pagination\"\x9d\x01\n" +
	"\x0eSearchResponse\x12!\n" +
	"\x05posts\x18\x01 \x03(\v2\v.forum.PostR\x05posts\x12$\n" +
	"\x06topics\x18\x02 \x03(\v2\f.forum.TopicR\x06topics\x12\x1f\n" +
	"\vtotal_posts\x18\x03 \x01(\x03R\n" +
	"totalPosts\x12!\n" +
	"\ftotal_topics\x18\x04 \x01(\x03R\vtotalTopics\"a\n" +
	"\x15ListPostsByTagRequest\x12\x15\n" +
	"\x06tag_id\x18\x01 \x01(\x03R\x05tagId\x121\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x11.forum.PaginationR\n" +
	"pagination*Z\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rSTATUS_ACTIVE\x10\x01\x12\x12\n" +
	"\x0eSTATUS_DELETED\x10\x02\x12\x11\n" +
	"\rSTATUS_HIDDEN\x10\x03*P\n" +
	"\tSortOrder\x12\x1a\n" +
	"\x16SORT_ORDER_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eSORT_ORDER_ASC\x10\x01\x12\x13\n" +
	"\x0fSORT_ORDER_DESC\x10\x02*\x8e\x01\n" +
	"\tSortField\x12\x1a\n" +
	"\x16SORT_FIELD_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15SORT_FIELD_CREATED_AT\x10\x01\x12\x19\n" +
	"\x15SORT_FIELD_UPDATED_AT\x10\x02\x12\x14\n" +
	"\x10SORT_FIELD_TITLE\x10\x03\x12\x19\n" +
	"\x15SORT_FIELD_POPULARITY\x10\x042\x90\x0e\n" +
	"\fForumService\x12G\n" +
	"\x0eCreateCategory\x12\x1c.forum.CreateCategoryRequest\x1a\x17.forum.CategoryResponse\x12M\n" +
	"\x0eListCategories\x12\x1c.forum.ListCategoriesRequest\x1a\x1d.forum.ListCategoriesResponse\x12A\n" +
	"\vGetCategory\x12\x19.forum.GetCategoryRequest\x1a\x17.forum.CategoryResponse\x12G\n" +
	"\x0eUpdateCategory\x12\x1c.forum.UpdateCategoryRequest\x1a\x17.forum.CategoryResponse\x12<\n" +
	"\x0eDeleteCategory\x12\x1c.forum.DeleteCategoryRequest\x1a\f.forum.Empty\x12>\n" +
	"\vCreateTopic\x12\x19.forum.CreateTopicRequest\x1a\x14.forum.TopicResponse\x128\n" +
	"\bGetTopic\x12\x16.forum.GetTopicRequest\x1a\x14.forum.TopicResponse\x12A\n" +
	"\n" +
	"ListTopics\x12\x18.forum.ListTopicsRequest\x1a\x19.forum.ListTopicsResponse\x12>\n" +
	"\vUpdateTopic\x12\x19.forum.UpdateTopicRequest\x1a\x14.forum.TopicResponse\x126\n" +
	"\vDeleteTopic\x12\x19.forum.DeleteTopicRequest\x1a\f.forum.Empty\x12;\n" +
	"\n" +
	"CreatePost\x12\x18.forum.CreatePostRequest\x1a\x13.forum.PostResponse\x125\n" +
	"\aGetPost\x12\x15.forum.GetPostRequest\x1a\x13.forum.PostResponse\x12>\n" +
	"\tListPosts\x12\x17.forum.ListPostsRequest\x1a\x18.forum.ListPostsResponse\x12;\n" +
	"\n" +
	"UpdatePost\x12\x18.forum.UpdatePostRequest\x1a\x13.forum.PostResponse\x124\n" +
	"\n" +
	"DeletePost\x12\x18.forum.DeletePostRequest\x1a\f.forum.Empty\x12D\n" +
	"\rCreateComment\x12\x1b.forum.CreateCommentRequest\x1a\x16.forum.CommentResponse\x12>\n" +
	"\n" +
	"GetComment\x12\x18.forum.GetCommentRequest\x1a\x16.forum.CommentResponse\x12G\n" +
	"\fListComments\x12\x1a.forum.ListCommentsRequest\x1a\x1b.forum.ListCommentsResponse\x12D\n" +
	"\rUpdateComment\x12\x1b.forum.UpdateCommentRequest\x1a\x16.forum.CommentResponse\x12:\n" +
	"\rDeleteComment\x12\x1b.forum.DeleteCommentRequest\x1a\f.forum.Empty\x128\n" +
	"\tCreateTag\x12\x17.forum.CreateTagRequest\x1a\x12.forum.TagResponse\x122\n" +
	"\x06GetTag\x12\x14.forum.GetTagRequest\x1a\x12.forum.TagResponse\x12;\n" +
	"\bListTags\x12\x16.forum.ListTagsRequest\x1a\x17.forum.ListTagsResponse\x128\n" +
	"\fAddTagToPost\x12\x1a.forum.AddTagToPostRequest\x1a\f.forum.Empty\x12B\n" +
	"\x11RemoveTagFromPost\x12\x1f.forum.RemoveTagFromPostRequest\x1a\f.forum.Empty\x12G\n" +
	"\x0eListTagsByPost\x12\x1c.forum.ListTagsByPostRequest\x1a\x17.forum.ListTagsResponse\x12H\n" +
	"\x0eListPostsByTag\x12\x1c.forum.ListPostsByTagRequest\x1a\x18.forum.ListPostsResponse\x125\n" +
	"\x06Search\x12\x14.forum.SearchRequest\x1a\x15.forum.SearchResponseB\x18Z\x16tuzov.forum.v1;forumv1b\x06proto3"

var (
	file_forum_forum_proto_rawDescOnce sync.Once
	file_forum_forum_proto_rawDescData []byte
)

func file_forum_forum_proto_rawDescGZIP() []byte {
	file_forum_forum_proto_rawDescOnce.Do(func() {
		file_forum_forum_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_forum_forum_proto_rawDesc), len(file_forum_forum_proto_rawDesc)))
	})
	return file_forum_forum_proto_rawDescData
}

var file_forum_forum_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_forum_forum_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_forum_forum_proto_goTypes = []any{
	(Status)(0),                      // 0: forum.Status
	(SortOrder)(0),                   // 1: forum.SortOrder
	(SortField)(0),                   // 2: forum.SortField
	(*Empty)(nil),                    // 3: forum.Empty
	(*Pagination)(nil),               // 4: forum.Pagination
	(*Sorting)(nil),                  // 5: forum.Sorting
	(*Category)(nil),                 // 6: forum.Category
	(*CreateCategoryRequest)(nil),    // 7: forum.CreateCategoryRequest
	(*UpdateCategoryRequest)(nil),    // 8: forum.UpdateCategoryRequest
	(*ListCategoriesRequest)(nil),    // 9: forum.ListCategoriesRequest
	(*ListCategoriesResponse)(nil),   // 10: forum.ListCategoriesResponse
	(*GetCategoryRequest)(nil),       // 11: forum.GetCategoryRequest
	(*DeleteCategoryRequest)(nil),    // 12: forum.DeleteCategoryRequest
	(*CategoryResponse)(nil),         // 13: forum.CategoryResponse
	(*Topic)(nil),                    // 14: forum.Topic
	(*CreateTopicRequest)(nil),       // 15: forum.CreateTopicRequest
	(*UpdateTopicRequest)(nil),       // 16: forum.UpdateTopicRequest
	(*ListTopicsRequest)(nil),        // 17: forum.ListTopicsRequest
	(*ListTopicsResponse)(nil),       // 18: forum.ListTopicsResponse
	(*GetTopicRequest)(nil),          // 19: forum.GetTopicRequest
	(*DeleteTopicRequest)(nil),       // 20: forum.DeleteTopicRequest
	(*TopicResponse)(nil),            // 21: forum.TopicResponse
	(*Post)(nil),                     // 22: forum.Post
	(*CreatePostRequest)(nil),        // 23: forum.CreatePostRequest
	(*UpdatePostRequest)(nil),        // 24: forum.UpdatePostRequest
	(*ListPostsRequest)(nil),         // 25: forum.ListPostsRequest
	(*ListPostsResponse)(nil),        // 26: forum.ListPostsResponse
	(*GetPostRequest)(nil),           // 27: forum.GetPostRequest
	(*DeletePostRequest)(nil),        // 28: forum.DeletePostRequest
	(*PostResponse)(nil),             // 29: forum.PostResponse
	(*Comment)(nil),                  // 30: forum.Comment
	(*CreateCommentRequest)(nil),     // 31: forum.CreateCommentRequest
	(*UpdateCommentRequest)(nil),     // 32: forum.UpdateCommentRequest
	(*ListCommentsRequest)(nil),      // 33: forum.ListCommentsRequest
	(*ListCommentsResponse)(nil),     // 34: forum.ListCommentsResponse
	(*GetCommentRequest)(nil),        // 35: forum.GetCommentRequest
	(*DeleteCommentRequest)(nil),     // 36: forum.DeleteCommentRequest
	(*CommentResponse)(nil),          // 37: forum.CommentResponse
	(*Tag)(nil),                      // 38: forum.Tag
	(*CreateTagRequest)(nil),         // 39: forum.CreateTagRequest
	(*GetTagRequest)(nil),            // 40: forum.GetTagRequest
	(*ListTagsRequest)(nil),          // 41: forum.ListTagsRequest
	(*ListTagsResponse)(nil),         // 42: forum.ListTagsResponse
	(*ListTagsByPostRequest)(nil),    // 43: forum.ListTagsByPostRequest
	(*AddTagToPostRequest)(nil),      // 44: forum.AddTagToPostRequest
	(*RemoveTagFromPostRequest)(nil), // 45: forum.RemoveTagFromPostRequest
	(*TagResponse)(nil),              // 46: forum.TagResponse
	(*SearchRequest)(nil),            // 47: forum.SearchRequest
	(*SearchResponse)(nil),           // 48: forum.SearchResponse
	(*ListPostsByTagRequest)(nil),    // 49: forum.ListPostsByTagRequest
}
var file_forum_forum_proto_depIdxs = []int32{
	2,  // 0: forum.Sorting.sort_field:type_name -> forum.SortField
	1,  // 1: forum.Sorting.sort_order:type_name -> forum.SortOrder
	4,  // 2: forum.ListCategoriesRequest.pagination:type_name -> forum.Pagination
	6,  // 3: forum.ListCategoriesResponse.categories:type_name -> forum.Category
	6,  // 4: forum.CategoryResponse.category:type_name -> forum.Category
	0,  // 5: forum.Topic.status:type_name -> forum.Status
	4,  // 6: forum.ListTopicsRequest.pagination:type_name -> forum.Pagination
	5,  // 7: forum.ListTopicsRequest.sorting:type_name -> forum.Sorting
	14, // 8: forum.ListTopicsResponse.topics:type_name -> forum.Topic
	14, // 9: forum.TopicResponse.topic:type_name -> forum.Topic
	22, // 10: forum.TopicResponse.first_post:type_name -> forum.Post
	0,  // 11: forum.Post.status:type_name -> forum.Status
	4,  // 12: forum.ListPostsRequest.pagination:type_name -> forum.Pagination
	5,  // 13: forum.ListPostsRequest.sorting:type_name -> forum.Sorting
	22, // 14: forum.ListPostsResponse.posts:type_name -> forum.Post
	22, // 15: forum.PostResponse.post:type_name -> forum.Post
	4,  // 16: forum.ListCommentsRequest.pagination:type_name -> forum.Pagination
	30, // 17: forum.ListCommentsResponse.comments:type_name -> forum.Comment
	30, // 18: forum.CommentResponse.comment:type_name -> forum.Comment
	4,  // 19: forum.ListTagsRequest.pagination:type_name -> forum.Pagination
	38, // 20: forum.ListTagsResponse.tags:type_name -> forum.Tag
	38, // 21: forum.TagResponse.tag:type_name -> forum.Tag
	4,  // 22: forum.SearchRequest.pagination:type_name -> forum.Pagination
	22, // 23: forum.SearchResponse.posts:type_name -> forum.Post
	14, // 24: forum.SearchResponse.topics:type_name -> forum.Topic
	4,  // 25: forum.ListPostsByTagRequest.pagination:type_name -> forum.Pagination
	7,  // 26: forum.ForumService.CreateCategory:input_type -> forum.CreateCategoryRequest
	9,  // 27: forum.ForumService.ListCategories:input_type -> forum.ListCategoriesRequest
	11, // 28: forum.ForumService.GetCategory:input_type -> forum.GetCategoryRequest
	8,  // 29: forum.ForumService.UpdateCategory:input_type -> forum.UpdateCategoryRequest
	12, // 30: forum.ForumService.DeleteCategory:input_type -> forum.DeleteCategoryRequest
	15, // 31: forum.ForumService.CreateTopic:input_type -> forum.CreateTopicRequest
	19, // 32: forum.ForumService.GetTopic:input_type -> forum.GetTopicRequest
	17, // 33: forum.ForumService.ListTopics:input_type -> forum.ListTopicsRequest
	16, // 34: forum.ForumService.UpdateTopic:input_type -> forum.UpdateTopicRequest
	20, // 35: forum.ForumService.DeleteTopic:input_type -> forum.DeleteTopicRequest
	23, // 36: forum.ForumService.CreatePost:input_type -> forum.CreatePostRequest
	27, // 37: forum.ForumService.GetPost:input_type -> forum.GetPostRequest
	25, // 38: forum.ForumService.ListPosts:input_type -> forum.ListPostsRequest
	24, // 39: forum.ForumService.UpdatePost:input_type -> forum.UpdatePostRequest
	28, // 40: forum.ForumService.DeletePost:input_type -> forum.DeletePostRequest
	31, // 41: forum.ForumService.CreateComment:input_type -> forum.CreateCommentRequest
	35, // 42: forum.ForumService.GetComment:input_type -> forum.GetCommentRequest
	33, // 43: forum.ForumService.ListComments:input_type -> forum.ListCommentsRequest
	32, // 44: forum.ForumService.UpdateComment:input_type -> forum.UpdateCommentRequest
	36, // 45: forum.ForumService.DeleteComment:input_type -> forum.DeleteCommentRequest
	39, // 46: forum.ForumService.CreateTag:input_type -> forum.CreateTagRequest
	40, // 47: forum.ForumService.GetTag:input_type -> forum.GetTagRequest
	41, // 48: forum.ForumService.ListTags:input_type -> forum.ListTagsRequest
	44, // 49: forum.ForumService.AddTagToPost:input_type -> forum.AddTagToPostRequest
	45, // 50: forum.ForumService.RemoveTagFromPost:input_type -> forum.RemoveTagFromPostRequest
	43, // 51: forum.ForumService.ListTagsByPost:input_type -> forum.ListTagsByPostRequest
	49, // 52: forum.ForumService.ListPostsByTag:input_type -> forum.ListPostsByTagRequest
	47, // 53: forum.ForumService.Search:input_type -> forum.SearchRequest
	13, // 54: forum.ForumService.CreateCategory:output_type -> forum.CategoryResponse
	10, // 55: forum.ForumService.ListCategories:output_type -> forum.ListCategoriesResponse
	13, // 56: forum.ForumService.GetCategory:output_type -> forum.CategoryResponse
	13, // 57: forum.ForumService.UpdateCategory:output_type -> forum.CategoryResponse
	3,  // 58: forum.ForumService.DeleteCategory:output_type -> forum.Empty
	21, // 59: forum.ForumService.CreateTopic:output_type -> forum.TopicResponse
	21, // 60: forum.ForumService.GetTopic:output_type -> forum.TopicResponse
	18, // 61: forum.ForumService.ListTopics:output_type -> forum.ListTopicsResponse
	21, // 62: forum.ForumService.UpdateTopic:output_type -> forum.TopicResponse
	3,  // 63: forum.ForumService.DeleteTopic:output_type -> forum.Empty
	29, // 64: forum.ForumService.CreatePost:output_type -> forum.PostResponse
	29, // 65: forum.ForumService.GetPost:output_type -> forum.PostResponse
	26, // 66: forum.ForumService.ListPosts:output_type -> forum.ListPostsResponse
	29, // 67: forum.ForumService.UpdatePost:output_type -> forum.PostResponse
	3,  // 68: forum.ForumService.DeletePost:output_type -> forum.Empty
	37, // 69: forum.ForumService.CreateComment:output_type -> forum.CommentResponse
	37, // 70: forum.ForumService.GetComment:output_type -> forum.CommentResponse
	34, // 71: forum.ForumService.ListComments:output_type -> forum.ListCommentsResponse
	37, // 72: forum.ForumService.UpdateComment:output_type -> forum.CommentResponse
	3,  // 73: forum.ForumService.DeleteComment:output_type -> forum.Empty
	46, // 74: forum.ForumService.CreateTag:output_type -> forum.TagResponse
	46, // 75: forum.ForumService.GetTag:output_type -> forum.TagResponse
	42, // 76: forum.ForumService.ListTags:output_type -> forum.ListTagsResponse
	3,  // 77: forum.ForumService.AddTagToPost:output_type -> forum.Empty
	3,  // 78: forum.ForumService.RemoveTagFromPost:output_type -> forum.Empty
	42, // 79: forum.ForumService.ListTagsByPost:output_type -> forum.ListTagsResponse
	26, // 80: forum.ForumService.ListPostsByTag:output_type -> forum.ListPostsResponse
	48, // 81: forum.ForumService.Search:output_type -> forum.SearchResponse
	54, // [54:82] is the sub-list for method output_type
	26, // [26:54] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_forum_forum_proto_init() }
func file_forum_forum_proto_init() {
	if File_forum_forum_proto != nil {
		return
	}
	file_forum_forum_proto_msgTypes[5].OneofWrappers = []any{}
	file_forum_forum_proto_msgTypes[13].OneofWrappers = []any{}
	file_forum_forum_proto_msgTypes[14].OneofWrappers = []any{}
	file_forum_forum_proto_msgTypes[21].OneofWrappers = []any{}
	file_forum_forum_proto_msgTypes[22].OneofWrappers = []any{}
	file_forum_forum_proto_msgTypes[37].OneofWrappers = []any{
		(*GetTagRequest_Id)(nil),
		(*GetTagRequest_Slug)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_forum_forum_proto_rawDesc), len(file_forum_forum_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_forum_forum_proto_goTypes,
		DependencyIndexes: file_forum_forum_proto_depIdxs,
		EnumInfos:         file_forum_forum_proto_enumTypes,
		MessageInfos:      file_forum_forum_proto_msgTypes,
	}.Build()
	File_forum_forum_proto = out.File
	file_forum_forum_proto_goTypes = nil
	file_forum_forum_proto_depIdxs = nil
}
