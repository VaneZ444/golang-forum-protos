// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: forum/forum.proto

package forumv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_forum_forum_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{0}
}

// Категории
type Category struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Slug          string                 `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Category) Reset() {
	*x = Category{}
	mi := &file_forum_forum_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{1}
}

func (x *Category) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Category) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Category) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type ListCategoriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Categories    []*Category            `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCategoriesResponse) Reset() {
	*x = ListCategoriesResponse{}
	mi := &file_forum_forum_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCategoriesResponse) ProtoMessage() {}

func (x *ListCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCategoriesResponse.ProtoReflect.Descriptor instead.
func (*ListCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{2}
}

func (x *ListCategoriesResponse) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

type GetCategoryByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryId    int64                  `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCategoryByIDRequest) Reset() {
	*x = GetCategoryByIDRequest{}
	mi := &file_forum_forum_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCategoryByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryByIDRequest) ProtoMessage() {}

func (x *GetCategoryByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryByIDRequest.ProtoReflect.Descriptor instead.
func (*GetCategoryByIDRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{3}
}

func (x *GetCategoryByIDRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

type GetCategoryByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      *Category              `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCategoryByIDResponse) Reset() {
	*x = GetCategoryByIDResponse{}
	mi := &file_forum_forum_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCategoryByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryByIDResponse) ProtoMessage() {}

func (x *GetCategoryByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryByIDResponse.ProtoReflect.Descriptor instead.
func (*GetCategoryByIDResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{4}
}

func (x *GetCategoryByIDResponse) GetCategory() *Category {
	if x != nil {
		return x.Category
	}
	return nil
}

// Темы
type Topic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AuthorId      int64                  `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	CategoryId    int64                  `protobuf:"varint,4,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Topic) Reset() {
	*x = Topic{}
	mi := &file_forum_forum_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Topic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topic) ProtoMessage() {}

func (x *Topic) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topic.ProtoReflect.Descriptor instead.
func (*Topic) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{5}
}

func (x *Topic) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Topic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Topic) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Topic) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *Topic) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type CreateTopicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	AuthorId      int64                  `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	CategoryId    int64                  `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTopicRequest) Reset() {
	*x = CreateTopicRequest{}
	mi := &file_forum_forum_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicRequest) ProtoMessage() {}

func (x *CreateTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicRequest.ProtoReflect.Descriptor instead.
func (*CreateTopicRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{6}
}

func (x *CreateTopicRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTopicRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *CreateTopicRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

type CreateTopicResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicId       int64                  `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTopicResponse) Reset() {
	*x = CreateTopicResponse{}
	mi := &file_forum_forum_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicResponse) ProtoMessage() {}

func (x *CreateTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicResponse.ProtoReflect.Descriptor instead.
func (*CreateTopicResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{7}
}

func (x *CreateTopicResponse) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetTopicByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicId       int64                  `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTopicByIDRequest) Reset() {
	*x = GetTopicByIDRequest{}
	mi := &file_forum_forum_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTopicByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicByIDRequest) ProtoMessage() {}

func (x *GetTopicByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTopicByIDRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{8}
}

func (x *GetTopicByIDRequest) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetTopicByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         *Topic                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTopicByIDResponse) Reset() {
	*x = GetTopicByIDResponse{}
	mi := &file_forum_forum_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTopicByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicByIDResponse) ProtoMessage() {}

func (x *GetTopicByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicByIDResponse.ProtoReflect.Descriptor instead.
func (*GetTopicByIDResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{9}
}

func (x *GetTopicByIDResponse) GetTopic() *Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

type ListTopicsByCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryId    int64                  `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTopicsByCategoryRequest) Reset() {
	*x = ListTopicsByCategoryRequest{}
	mi := &file_forum_forum_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTopicsByCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsByCategoryRequest) ProtoMessage() {}

func (x *ListTopicsByCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsByCategoryRequest.ProtoReflect.Descriptor instead.
func (*ListTopicsByCategoryRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{10}
}

func (x *ListTopicsByCategoryRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *ListTopicsByCategoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListTopicsByCategoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListTopicsByCategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topics        []*Topic               `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTopicsByCategoryResponse) Reset() {
	*x = ListTopicsByCategoryResponse{}
	mi := &file_forum_forum_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTopicsByCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsByCategoryResponse) ProtoMessage() {}

func (x *ListTopicsByCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsByCategoryResponse.ProtoReflect.Descriptor instead.
func (*ListTopicsByCategoryResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{11}
}

func (x *ListTopicsByCategoryResponse) GetTopics() []*Topic {
	if x != nil {
		return x.Topics
	}
	return nil
}

// Посты
type Post struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TopicId       int64                  `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	AuthorId      int64                  `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Post) Reset() {
	*x = Post{}
	mi := &file_forum_forum_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{12}
}

func (x *Post) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Post) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *Post) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Post) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Post) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type CreatePostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicId       int64                  `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	AuthorId      int64                  `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePostRequest) Reset() {
	*x = CreatePostRequest{}
	mi := &file_forum_forum_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostRequest) ProtoMessage() {}

func (x *CreatePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostRequest.ProtoReflect.Descriptor instead.
func (*CreatePostRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{13}
}

func (x *CreatePostRequest) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *CreatePostRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *CreatePostRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreatePostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int64                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePostResponse) Reset() {
	*x = CreatePostResponse{}
	mi := &file_forum_forum_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostResponse) ProtoMessage() {}

func (x *CreatePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostResponse.ProtoReflect.Descriptor instead.
func (*CreatePostResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{14}
}

func (x *CreatePostResponse) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type ListPostsByTopicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicId       int64                  `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPostsByTopicRequest) Reset() {
	*x = ListPostsByTopicRequest{}
	mi := &file_forum_forum_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPostsByTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPostsByTopicRequest) ProtoMessage() {}

func (x *ListPostsByTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPostsByTopicRequest.ProtoReflect.Descriptor instead.
func (*ListPostsByTopicRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{15}
}

func (x *ListPostsByTopicRequest) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *ListPostsByTopicRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPostsByTopicRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListPostsByTopicResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Posts         []*Post                `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPostsByTopicResponse) Reset() {
	*x = ListPostsByTopicResponse{}
	mi := &file_forum_forum_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPostsByTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPostsByTopicResponse) ProtoMessage() {}

func (x *ListPostsByTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPostsByTopicResponse.ProtoReflect.Descriptor instead.
func (*ListPostsByTopicResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{16}
}

func (x *ListPostsByTopicResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

// Комментарии
type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PostId        int64                  `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	AuthorId      int64                  `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_forum_forum_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{17}
}

func (x *Comment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *Comment) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type AddCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int64                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	AuthorId      int64                  `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCommentRequest) Reset() {
	*x = AddCommentRequest{}
	mi := &file_forum_forum_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentRequest) ProtoMessage() {}

func (x *AddCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentRequest.ProtoReflect.Descriptor instead.
func (*AddCommentRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{18}
}

func (x *AddCommentRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *AddCommentRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *AddCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     int64                  `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCommentResponse) Reset() {
	*x = AddCommentResponse{}
	mi := &file_forum_forum_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentResponse) ProtoMessage() {}

func (x *AddCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentResponse.ProtoReflect.Descriptor instead.
func (*AddCommentResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{19}
}

func (x *AddCommentResponse) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type ListCommentsByPostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int64                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommentsByPostRequest) Reset() {
	*x = ListCommentsByPostRequest{}
	mi := &file_forum_forum_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommentsByPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentsByPostRequest) ProtoMessage() {}

func (x *ListCommentsByPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentsByPostRequest.ProtoReflect.Descriptor instead.
func (*ListCommentsByPostRequest) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{20}
}

func (x *ListCommentsByPostRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *ListCommentsByPostRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListCommentsByPostRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListCommentsByPostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommentsByPostResponse) Reset() {
	*x = ListCommentsByPostResponse{}
	mi := &file_forum_forum_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommentsByPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentsByPostResponse) ProtoMessage() {}

func (x *ListCommentsByPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentsByPostResponse.ProtoReflect.Descriptor instead.
func (*ListCommentsByPostResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{21}
}

func (x *ListCommentsByPostResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

// Теги
type Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Slug          string                 `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tag) Reset() {
	*x = Tag{}
	mi := &file_forum_forum_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{22}
}

func (x *Tag) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tag) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Tag) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type ListTagsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []*Tag                 `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTagsResponse) Reset() {
	*x = ListTagsResponse{}
	mi := &file_forum_forum_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsResponse) ProtoMessage() {}

func (x *ListTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_forum_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsResponse.ProtoReflect.Descriptor instead.
func (*ListTagsResponse) Descriptor() ([]byte, []int) {
	return file_forum_forum_proto_rawDescGZIP(), []int{23}
}

func (x *ListTagsResponse) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_forum_forum_proto protoreflect.FileDescriptor

const file_forum_forum_proto_rawDesc = "" +
	"\n" +
	"\x11forum/forum.proto\x12\x05forum\"\a\n" +
	"\x05Empty\"D\n" +
	"\bCategory\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x12\n" +
	"\x04slug\x18\x03 \x01(\tR\x04slug\"I\n" +
	"\x16ListCategoriesResponse\x12/\n" +
	"\n" +
	"categories\x18\x01 \x03(\v2\x0f.forum.CategoryR\n" +
	"categories\"9\n" +
	"\x16GetCategoryByIDRequest\x12\x1f\n" +
	"\vcategory_id\x18\x01 \x01(\x03R\n" +
	"categoryId\"F\n" +
	"\x17GetCategoryByIDResponse\x12+\n" +
	"\bcategory\x18\x01 \x01(\v2\x0f.forum.CategoryR\bcategory\"\x8a\x01\n" +
	"\x05Topic\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1b\n" +
	"\tauthor_id\x18\x03 \x01(\x03R\bauthorId\x12\x1f\n" +
	"\vcategory_id\x18\x04 \x01(\x03R\n" +
	"categoryId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\"h\n" +
	"\x12CreateTopicRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x1b\n" +
	"\tauthor_id\x18\x02 \x01(\x03R\bauthorId\x12\x1f\n" +
	"\vcategory_id\x18\x03 \x01(\x03R\n" +
	"categoryId\"0\n" +
	"\x13CreateTopicResponse\x12\x19\n" +
	"\btopic_id\x18\x01 \x01(\x03R\atopicId\"0\n" +
	"\x13GetTopicByIDRequest\x12\x19\n" +
	"\btopic_id\x18\x01 \x01(\x03R\atopicId\":\n" +
	"\x14GetTopicByIDResponse\x12\"\n" +
	"\x05topic\x18\x01 \x01(\v2\f.forum.TopicR\x05topic\"l\n" +
	"\x1bListTopicsByCategoryRequest\x12\x1f\n" +
	"\vcategory_id\x18\x01 \x01(\x03R\n" +
	"categoryId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"D\n" +
	"\x1cListTopicsByCategoryResponse\x12$\n" +
	"\x06topics\x18\x01 \x03(\v2\f.forum.TopicR\x06topics\"\x87\x01\n" +
	"\x04Post\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x19\n" +
	"\btopic_id\x18\x02 \x01(\x03R\atopicId\x12\x1b\n" +
	"\tauthor_id\x18\x03 \x01(\x03R\bauthorId\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\"e\n" +
	"\x11CreatePostRequest\x12\x19\n" +
	"\btopic_id\x18\x01 \x01(\x03R\atopicId\x12\x1b\n" +
	"\tauthor_id\x18\x02 \x01(\x03R\bauthorId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"-\n" +
	"\x12CreatePostResponse\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\x03R\x06postId\"b\n" +
	"\x17ListPostsByTopicRequest\x12\x19\n" +
	"\btopic_id\x18\x01 \x01(\x03R\atopicId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"=\n" +
	"\x18ListPostsByTopicResponse\x12!\n" +
	"\x05posts\x18\x01 \x03(\v2\v.forum.PostR\x05posts\"\x88\x01\n" +
	"\aComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\apost_id\x18\x02 \x01(\x03R\x06postId\x12\x1b\n" +
	"\tauthor_id\x18\x03 \x01(\x03R\bauthorId\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\"c\n" +
	"\x11AddCommentRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\x03R\x06postId\x12\x1b\n" +
	"\tauthor_id\x18\x02 \x01(\x03R\bauthorId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"3\n" +
	"\x12AddCommentResponse\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\x03R\tcommentId\"b\n" +
	"\x19ListCommentsByPostRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\x03R\x06postId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"H\n" +
	"\x1aListCommentsByPostResponse\x12*\n" +
	"\bcomments\x18\x01 \x03(\v2\x0e.forum.CommentR\bcomments\"?\n" +
	"\x03Tag\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x12\n" +
	"\x04slug\x18\x03 \x01(\tR\x04slug\"2\n" +
	"\x10ListTagsResponse\x12\x1e\n" +
	"\x04tags\x18\x01 \x03(\v2\n" +
	".forum.TagR\x04tags2\xf1\x05\n" +
	"\x05Forum\x12=\n" +
	"\x0eListCategories\x12\f.forum.Empty\x1a\x1d.forum.ListCategoriesResponse\x12P\n" +
	"\x0fGetCategoryByID\x12\x1d.forum.GetCategoryByIDRequest\x1a\x1e.forum.GetCategoryByIDResponse\x12D\n" +
	"\vCreateTopic\x12\x19.forum.CreateTopicRequest\x1a\x1a.forum.CreateTopicResponse\x12G\n" +
	"\fGetTopicByID\x12\x1a.forum.GetTopicByIDRequest\x1a\x1b.forum.GetTopicByIDResponse\x12_\n" +
	"\x14ListTopicsByCategory\x12\".forum.ListTopicsByCategoryRequest\x1a#.forum.ListTopicsByCategoryResponse\x12A\n" +
	"\n" +
	"CreatePost\x12\x18.forum.CreatePostRequest\x1a\x19.forum.CreatePostResponse\x12S\n" +
	"\x10ListPostsByTopic\x12\x1e.forum.ListPostsByTopicRequest\x1a\x1f.forum.ListPostsByTopicResponse\x12A\n" +
	"\n" +
	"AddComment\x12\x18.forum.AddCommentRequest\x1a\x19.forum.AddCommentResponse\x12Y\n" +
	"\x12ListCommentsByPost\x12 .forum.ListCommentsByPostRequest\x1a!.forum.ListCommentsByPostResponse\x121\n" +
	"\bListTags\x12\f.forum.Empty\x1a\x17.forum.ListTagsResponseB\x18Z\x16tuzov.forum.v1;forumv1b\x06proto3"

var (
	file_forum_forum_proto_rawDescOnce sync.Once
	file_forum_forum_proto_rawDescData []byte
)

func file_forum_forum_proto_rawDescGZIP() []byte {
	file_forum_forum_proto_rawDescOnce.Do(func() {
		file_forum_forum_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_forum_forum_proto_rawDesc), len(file_forum_forum_proto_rawDesc)))
	})
	return file_forum_forum_proto_rawDescData
}

var file_forum_forum_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_forum_forum_proto_goTypes = []any{
	(*Empty)(nil),                        // 0: forum.Empty
	(*Category)(nil),                     // 1: forum.Category
	(*ListCategoriesResponse)(nil),       // 2: forum.ListCategoriesResponse
	(*GetCategoryByIDRequest)(nil),       // 3: forum.GetCategoryByIDRequest
	(*GetCategoryByIDResponse)(nil),      // 4: forum.GetCategoryByIDResponse
	(*Topic)(nil),                        // 5: forum.Topic
	(*CreateTopicRequest)(nil),           // 6: forum.CreateTopicRequest
	(*CreateTopicResponse)(nil),          // 7: forum.CreateTopicResponse
	(*GetTopicByIDRequest)(nil),          // 8: forum.GetTopicByIDRequest
	(*GetTopicByIDResponse)(nil),         // 9: forum.GetTopicByIDResponse
	(*ListTopicsByCategoryRequest)(nil),  // 10: forum.ListTopicsByCategoryRequest
	(*ListTopicsByCategoryResponse)(nil), // 11: forum.ListTopicsByCategoryResponse
	(*Post)(nil),                         // 12: forum.Post
	(*CreatePostRequest)(nil),            // 13: forum.CreatePostRequest
	(*CreatePostResponse)(nil),           // 14: forum.CreatePostResponse
	(*ListPostsByTopicRequest)(nil),      // 15: forum.ListPostsByTopicRequest
	(*ListPostsByTopicResponse)(nil),     // 16: forum.ListPostsByTopicResponse
	(*Comment)(nil),                      // 17: forum.Comment
	(*AddCommentRequest)(nil),            // 18: forum.AddCommentRequest
	(*AddCommentResponse)(nil),           // 19: forum.AddCommentResponse
	(*ListCommentsByPostRequest)(nil),    // 20: forum.ListCommentsByPostRequest
	(*ListCommentsByPostResponse)(nil),   // 21: forum.ListCommentsByPostResponse
	(*Tag)(nil),                          // 22: forum.Tag
	(*ListTagsResponse)(nil),             // 23: forum.ListTagsResponse
}
var file_forum_forum_proto_depIdxs = []int32{
	1,  // 0: forum.ListCategoriesResponse.categories:type_name -> forum.Category
	1,  // 1: forum.GetCategoryByIDResponse.category:type_name -> forum.Category
	5,  // 2: forum.GetTopicByIDResponse.topic:type_name -> forum.Topic
	5,  // 3: forum.ListTopicsByCategoryResponse.topics:type_name -> forum.Topic
	12, // 4: forum.ListPostsByTopicResponse.posts:type_name -> forum.Post
	17, // 5: forum.ListCommentsByPostResponse.comments:type_name -> forum.Comment
	22, // 6: forum.ListTagsResponse.tags:type_name -> forum.Tag
	0,  // 7: forum.Forum.ListCategories:input_type -> forum.Empty
	3,  // 8: forum.Forum.GetCategoryByID:input_type -> forum.GetCategoryByIDRequest
	6,  // 9: forum.Forum.CreateTopic:input_type -> forum.CreateTopicRequest
	8,  // 10: forum.Forum.GetTopicByID:input_type -> forum.GetTopicByIDRequest
	10, // 11: forum.Forum.ListTopicsByCategory:input_type -> forum.ListTopicsByCategoryRequest
	13, // 12: forum.Forum.CreatePost:input_type -> forum.CreatePostRequest
	15, // 13: forum.Forum.ListPostsByTopic:input_type -> forum.ListPostsByTopicRequest
	18, // 14: forum.Forum.AddComment:input_type -> forum.AddCommentRequest
	20, // 15: forum.Forum.ListCommentsByPost:input_type -> forum.ListCommentsByPostRequest
	0,  // 16: forum.Forum.ListTags:input_type -> forum.Empty
	2,  // 17: forum.Forum.ListCategories:output_type -> forum.ListCategoriesResponse
	4,  // 18: forum.Forum.GetCategoryByID:output_type -> forum.GetCategoryByIDResponse
	7,  // 19: forum.Forum.CreateTopic:output_type -> forum.CreateTopicResponse
	9,  // 20: forum.Forum.GetTopicByID:output_type -> forum.GetTopicByIDResponse
	11, // 21: forum.Forum.ListTopicsByCategory:output_type -> forum.ListTopicsByCategoryResponse
	14, // 22: forum.Forum.CreatePost:output_type -> forum.CreatePostResponse
	16, // 23: forum.Forum.ListPostsByTopic:output_type -> forum.ListPostsByTopicResponse
	19, // 24: forum.Forum.AddComment:output_type -> forum.AddCommentResponse
	21, // 25: forum.Forum.ListCommentsByPost:output_type -> forum.ListCommentsByPostResponse
	23, // 26: forum.Forum.ListTags:output_type -> forum.ListTagsResponse
	17, // [17:27] is the sub-list for method output_type
	7,  // [7:17] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_forum_forum_proto_init() }
func file_forum_forum_proto_init() {
	if File_forum_forum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_forum_forum_proto_rawDesc), len(file_forum_forum_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_forum_forum_proto_goTypes,
		DependencyIndexes: file_forum_forum_proto_depIdxs,
		MessageInfos:      file_forum_forum_proto_msgTypes,
	}.Build()
	File_forum_forum_proto = out.File
	file_forum_forum_proto_goTypes = nil
	file_forum_forum_proto_depIdxs = nil
}
